@using System.Collections
@using System.Web.UI.WebControls
@using OnlineAuction.Buisness.Data
@model OnlineAuction.Buisness.Models.Lot.CreateLotModel
@{
    ViewBag.Title = "CreateLot";
    Layout = "~/Views/Shared/_mainLayout.cshtml";
}

<div class="col-md-4 center-block highlight row lot-create">
    @using (Html.BeginForm("CreateLot", "Lot", FormMethod.Post, new {enctype = "multipart/form-data", @class = "form-horizontal"}))
    {
        <fieldset class="">
            <legend class=text-center>Create Lot</legend>
            <div class="control-group">
                <label class="control-label" for="Name">Name</label>
                <div class="controls">
                    @Html.TextBoxFor(t => t.Name,new { @class="form-control"})
                </div>
            </div>
            <div class="controls-row ">
                <label class="control-label" for="Description">Description</label>
                <div class="controls">
                    @Html.TextAreaFor(t => t.Description,new { @class="form-control"})
                </div>
            </div>
            <div class="control-group col-md-5" style="padding:0;">
                <label class="control-label" for="ActualDate">Actual date</label>
                <div class="controls">
                    @(Html.Kendo().DateTimePickerFor(t => t.ActualDate).HtmlAttributes(new {style = "width:100%;"})
                          .Name("ActualDate")
                          .Value(DateTime.Now))
                </div>
            </div>
            <div class="control-group col-md-7" style="padding-right:0;">
                <label class="control-label" for="StartCurrency">Start currency</label>
                <div class="controls">
                    @Html.TextBoxFor(t => t.StartCurrency,new { @class="form-control", style="height:29px"})
                </div>
            </div>

            <div class="control-group">
                <label class="control-label" for="SubCategories">Categories</label>

                <div class="controls">
                    @(Html.Kendo().MultiSelectFor(model => model.SubCategories)
                          .Name("SelectedIds").Placeholder("Select any category")
                          .DataTextField("SubCategoryName")
                          .DataValueField("ID")
                          .DataSource(t => t.Read(r => r.Action("GetSubCategories", "Lot")))
                          )
                </div>
            </div>
           
            
            <div class="control-group">
                <label class="control-label">Select photo</label>
                <div class="controls">
                    @(Html.Kendo().Upload().HtmlAttributes(new {style = ""})
                          .Name("files"))
                </div>
            </div>
           
            <div class="alert-warning">
                @Html.ValidationSummary(true, "Lot creation was unsuccessful. Please correct the errors and try again.")
                <p> @Html.ValidationMessageFor(t => t.Name)</p>
                <p>@Html.ValidationMessageFor(t => t.Description)</p>
                <p>@Html.ValidationMessageFor(m => m.StartCurrency)</p>
            </div>     
           
            <button type="submit" value="Create Lot" class="btn btn-success btn-block">
                Save</button>
        </fieldset>
    }
</div>
<script type="text/javascript">

    function serialize(data) {
        debugger;
        for (var property in data) {
            if ($.isArray(data[property])) {
                serializeArray(property, data[property], data);
            }
        }
    }

    function serializeArray(prefix, array, result) {
        for (var i = 0; i < array.length; i++) {
            if ($.isPlainObject(array[i])) {
                for (var property in array[i]) {
                    result[prefix + "[" + i + "]." + property] = array[i][property];
                }
            }
            else {
                result[prefix + "[" + i + "]"] = array[i];
            }
        }
    }
</script>
